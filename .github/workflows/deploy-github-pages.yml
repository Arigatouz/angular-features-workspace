name: Deploy Angular AI Agent to GitHub Pages

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch: # Allow manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    steps:
    - name: 🚀 Checkout repository
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📦 Install dependencies
      run: |
        npm ci
        echo "✅ Dependencies installed successfully"

    - name: 🔧 Setup GitHub Pages
      uses: actions/configure-pages@v4

    - name: 🏗️ Build Angular Application
      run: |
        echo "🔨 Building Angular application for GitHub Pages..."

        # Extract repository name for base href
        REPO_NAME="${GITHUB_REPOSITORY##*/}"
        echo "📁 Repository name: $REPO_NAME"

        # Build with production configuration and GitHub Pages base href
        npm run build -- --configuration production --base-href "/$REPO_NAME/"

        echo "✅ Angular build completed successfully"

    - name: 🌐 Setup SPA routing for GitHub Pages
      run: |
        echo "⚙️ Setting up SPA routing support..."

        # Copy index.html to 404.html for SPA routing support
        cp dist/ai-agent/browser/index.html dist/ai-agent/browser/404.html

        # Create .nojekyll file to bypass Jekyll processing
        touch dist/ai-agent/browser/.nojekyll

        echo "✅ SPA routing configured"

    - name: 📤 Upload build artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist/ai-agent/browser'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: 🎉 Deployment Success
      run: |
        echo "🎊 Deployment completed successfully!"
        echo "🌐 Your Angular AI Agent is now live at: ${{ steps.deployment.outputs.page_url }}"
        echo "✨ Features available:"
        echo "  🔐 User API key management"
        echo "  💬 AI-powered conversations"
        echo "  🗄️ IndexedDB data persistence"
        echo "  📝 Markdown rendering"
        echo "  🎨 Material Design UI"